$duration: 1s;
$first-delay: 0s;

:root {
  --cube-side: 170;
  --cube-font-size: 3rem;
  --cube-font-size-hover: 4rem;
}

.about {
  --about-text-color: #000000;
  --about-text-first-letter: #ff0000;

  --about-my-photo-shadow: rgba(0, 0, 0, 0.5);

  --about-cube-face-bg: rgb(255 255 255 / 70%);
  --about-cube-face-border: #c5cd94;
  --about-cube-face-shadow: rgba(236, 248, 154, 0.5);
}

[data-theme="dark"] .about {
  --about-text-color: #dadada;
  --about-text-first-letter: #63eb4f;

  --about-my-photo-shadow: rgba(141, 141, 141, 0.5);

  --about-cube-face-bg: rgba(116, 104, 86, 0.47);
  --about-cube-face-border: #c5cd94;
  --about-cube-face-shadow: rgba(236, 248, 154, 0.5);
}

.about {
  overflow: hidden;

  &__title {
    font-size: calc(24px + 16 * (100vw / 1200));
    line-height: 1.4;
    font-weight: 600;
    margin: 0 0 30px 0;
    text-align: center;
  }

  &__about-me {
    max-width: 1220px;
    margin: 0 auto;
    margin-bottom: 40px;
    display: grid;
    grid-template-columns: repeat(2, calc(50% - 10px));
    grid-gap: 20px;

    @media (max-width: 721px) and (orientation: landscape) {
      grid-template-columns: 1fr;
    }

    @media (max-width: 661px) and (orientation: portrait) {
      grid-template-columns: 1fr;
    }
  }
}

.about-me {
  &__block {
    width: 100%;
    font-size: calc(16px + 5 * (100vw / 1800));
    line-height: 1.6;
  }

  &__cube {
    padding: 1px 0;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    animation: fadeIn 1s 2.3s forwards;
  }

  &__my-photo {
    width: calc(50% - 10px);
    min-width: 155px;
    float: left;
    margin: 0 20px 10px 0;
    border-radius: 20px;
    filter: grayscale(0);
    box-shadow: 0 0px 30px var(--about-my-photo-shadow);
    cursor: pointer;
    animation: fadeInLeft 1s 3.3s backwards;
    -webkit-tap-highlight-color: transparent;
    transition: 0.3s;

    @media (max-width: 325px) {
      display: block;
      float: none;
      width: 155px;
      margin: 0 auto 20px auto;
    }

    &:hover {
      filter: sepia(100%);
      transform: rotate(-7deg);
      transform-origin: top left;
    }
  }

  &__text {
    color: var(--about-text-color);
    margin: 0 0 20px 0;
    text-indent: 50px;
    animation: fadeInLeft 1s 2.3s backwards;

    &:first-letter {
      font-weight: 600;
      color: var(--about-text-first-letter);
      font-size: calc(16px + 7 * (100vw / 1800));
      text-shadow: 1px 1px 2px #000000;
    }

    &_big_margin-bottom {
      margin-bottom: 30px;
    }
  }
}

.skills-cube {
  height: calc(4px * var(--cube-side));
  width: calc(3px * var(--cube-side));
  padding: calc(2px * var(--cube-side)) calc(1px * var(--cube-side))
    calc(1px * var(--cube-side)) calc(1px * var(--cube-side));

  @media (orientation: landscape) and (max-width: 1141px) {
    --cube-side: 150;
    --cube-font-size: 2.5rem;
    --cube-font-size-hover: 3.5rem;
  }

  @media (orientation: landscape) and (max-width: 1021px) {
    --cube-side: 100;
    --cube-font-size: 2rem;
    --cube-font-size-hover: 3rem;
  }

  @media (orientation: landscape) and (max-width: 721px) {
    --cube-side: 170;
    --cube-font-size: 3rem;
    --cube-font-size-hover: 4rem;
  }

  @media (orientation: landscape) and (max-width: 611px) {
    --cube-side: 150;
    --cube-font-size: 2.5rem;
    --cube-font-size-hover: 3.5rem;
  }

  @media (orientation: landscape) and (max-width: 551px) {
    --cube-side: 100;
    --cube-font-size: 2rem;
    --cube-font-size-hover: 3rem;
  }

  @media (orientation: landscape) and (max-width: 401px) {
    --cube-side: 80;
    --cube-font-size: 1.5rem;
    --cube-font-size-hover: 2.5rem;
  }

  @media (orientation: portrait) and (max-width: 1081px) {
    --cube-side: 150;
    --cube-font-size: 2.5rem;
    --cube-font-size-hover: 3.5rem;
  }

  @media (orientation: portrait) and (max-width: 961px) {
    --cube-side: 100;
    --cube-font-size: 2rem;
    --cube-font-size-hover: 3rem;
  }

  @media (orientation: portrait) and (max-width: 661px) {
    --cube-side: 170;
    --cube-font-size: 3rem;
    --cube-font-size-hover: 4rem;
  }

  @media (orientation: portrait) and (max-width: 551px) {
    --cube-side: 150;
    --cube-font-size: 2.5rem;
    --cube-font-size-hover: 3.5rem;
  }

  @media (orientation: portrait) and (max-width: 491px) {
    --cube-side: 100;
    --cube-font-size: 2rem;
    --cube-font-size-hover: 3rem;
  }

  @media (orientation: portrait) and (max-width: 341px) {
    --cube-side: 80;
    --cube-font-size: 1.5rem;
    --cube-font-size-hover: 2.5rem;
  }

  &__spinner {
    position: relative;
    transform-style: preserve-3d;
  }

  &__face {
    cursor: pointer;
    width: calc(1px * var(--cube-side));
    height: calc(1px * var(--cube-side));
    border: 1px solid var(--about-cube-face-border);
    background-color: var(--about-cube-face-bg);
    box-shadow: 0 0 20px 0px var(--about-cube-face-shadow);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: var(--cube-font-size);
    -webkit-tap-highlight-color: transparent;
    transition: box-shadow 0.5s;

    &:hover {
      font-size: var(--cube-font-size-hover);
      border: 1px solid #37c2cd;
      box-shadow: 0 0 20px 0px rgba(126, 126, 126, 0.5);
    }

    svg {
      display: block;
    }
  }

  &__group {
    position: absolute;
    opacity: 0;
    transition: 1s;

    &_is_visible {
      opacity: 1;
    }
  }

  &__complex-face {
    position: absolute;
    transform-style: preserve-3d;
    top: calc(-2px * var(--cube-side));

    transform-origin: center bottom;
  }

  &__face1 {
    transform-origin: bottom center;
  }

  &__face3 {
    position: absolute;
    left: calc(-1px * var(--cube-side));

    transform-origin: right center;
  }

  &__face5 {
    position: absolute;
    right: calc(-1px * var(--cube-side));
    bottom: 0;

    transform-origin: left center;
  }

  &__face6 {
    position: absolute;
    bottom: calc(-1px * var(--cube-side));

    transform-origin: center top;
  }

  &_is_animated {
    .skills-cube__spinner {
      animation: spinCube2 8s calc($first-delay + 4s) forwards;
    }

    .skills-cube__complex-face {
      animation: foldComplex $duration calc($first-delay + 3s) forwards,
        unfoldComplex $duration calc($first-delay + 12s) forwards;
    }

    .skills-cube__face1 {
      animation: foldFace1 $duration calc($first-delay + 5s) forwards,
        unfoldFace1 $duration calc($first-delay + 13s) forwards;
    }

    .skills-cube__face3 {
      animation: foldFace3 $duration calc($first-delay + 1s) forwards,
        unfoldFace3 $duration calc($first-delay + 15s) forwards;
    }

    .skills-cube__face5 {
      animation: foldFace5 $duration $first-delay forwards,
        unfoldFace5 $duration calc($first-delay + 16s) forwards;
    }

    .skills-cube__face6 {
      animation: foldFace6 $duration calc($first-delay + 2s) forwards,
        unfoldFace6 $duration calc($first-delay + 14s) forwards;
    }
  }
}

@keyframes foldFace5 {
  from {
    transform: rotateY(0deg);
  }
  to {
    transform: rotateY(90deg);
  }
}

@keyframes unfoldFace5 {
  to {
    transform: rotateY(0deg);
  }
}

@keyframes foldFace3 {
  from {
    transform: rotateY(0deg);
  }
  to {
    transform: rotateY(-90deg);
  }
}

@keyframes unfoldFace3 {
  to {
    transform: rotateY(0deg);
  }
}

@keyframes foldFace6 {
  from {
    transform: rotateX(0deg);
  }
  to {
    transform: rotateX(-90deg);
  }
}

@keyframes unfoldFace6 {
  to {
    transform: rotateX(0deg);
  }
}

@keyframes foldFace1 {
  from {
    transform: rotateX(0deg);
  }
  to {
    transform: rotateX(90deg);
  }
}

@keyframes unfoldFace1 {
  to {
    transform: rotateX(0deg);
  }
}

@keyframes foldComplex {
  from {
    transform: rotateX(0deg);
  }
  to {
    transform: rotateX(90deg);
  }
}

@keyframes unfoldComplex {
  to {
    transform: rotateX(0deg);
  }
}

@keyframes spinCube2 {
  from,
  to {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
  }
  12.5% {
    transform: rotateY(230deg) rotateX(50deg);
  }
  25% {
    transform: rotateY(230deg) rotateX(50deg);
  }
  37.5% {
    transform: rotateY(-90deg);
  }
  50% {
    transform: rotateY(-90deg) rotateX(-90deg) rotateZ(90deg);
  }
  62.5% {
    transform: rotateY(-180deg) rotateZ(180deg);
  }
  75% {
    transform: rotateY(-270deg) rotateX(0deg);
  }
  87.5% {
    transform: rotateX(90deg);
  }
}
